"use strict";(self.webpackChunkhugo_code_star_site=self.webpackChunkhugo_code_star_site||[]).push([[15],{3388:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=a(8168),t=(a(6540),a(5680));const i={title:"Programmes \xe0 faire de l'atelier 6",sidebar_label:"6 - String et pandas"},l=void 0,o={unversionedId:"inf1035/Atelier/atelier6",id:"inf1035/Atelier/atelier6",isDocsHomePage:!1,title:"Programmes \xe0 faire de l'atelier 6",description:"mostfrequentcharacter",source:"@site/docs/inf1035/Atelier/atelier6.md",sourceDirName:"inf1035/Atelier",slug:"/inf1035/Atelier/atelier6",permalink:"/site/docs/inf1035/Atelier/atelier6",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf1035/Atelier/atelier6.md",tags:[],version:"current",frontMatter:{title:"Programmes \xe0 faire de l'atelier 6",sidebar_label:"6 - String et pandas"},sidebar:"INF1035Sidebar",previous:{title:"5 - Fichiers et exceptions",permalink:"/site/docs/inf1035/Atelier/atelier5"},next:{title:"7 - Fichiers et datetime",permalink:"/site/docs/inf1035/Atelier/atelier7"}},p=[{value:"most_frequent_character",id:"most_frequent_character",children:[]},{value:"word_separator",id:"word_separator",children:[]},{value:"convert_alpha_telephone",id:"convert_alpha_telephone",children:[]},{value:"1. Manipulations de base avec NumPy",id:"1-manipulations-de-base-avec-numpy",children:[]},{value:"2. Cr\xe9ation d\u2019un DataFrame simple et manipulations",id:"2-cr\xe9ation-dun-dataframe-simple-et-manipulations",children:[]},{value:"3. GroupBy et statistiques agr\xe9g\xe9es",id:"3-groupby-et-statistiques-agr\xe9g\xe9es",children:[]},{value:"4. Fusion de DataFrames (merge / concat)",id:"4-fusion-de-dataframes-merge--concat",children:[]}],s={toc:p},u="wrapper";function d(e){let{components:n,...a}=e;return(0,t.yg)(u,(0,r.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"most_frequent_character"},"most_frequent_character"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Trouve le caract\xe8re le plus utiliser \xe0 l'int\xe9rieur d'une chaine.\nArgs:\n    string: La chaine \xe0 \xe9valuer.\n\nReturns:\n    Le caract\xe8re le plus utilis\xe9 dans la chaine.\n")),(0,t.yg)("p",null,"Exemples:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'>>> most_frequent_character("salut tous!")\ns\n')),(0,t.yg)("h2",{id:"word_separator"},"word_separator"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Convertis une chaine de caract\xe8res en camelCase en phrase normale. L'entr\xe9e\nen camelCase est une chaine ou tous les mots d'une phrase sont indiqu\xe9s par une\nlettre majuscule et non par des espaces.\nArgs:\n    string: La chaine en camelCase.\n\nReturns:\n    La chaine en phrase normale avec des espaces entre chaque mot.\n")),(0,t.yg)("p",null,"Exemples:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'>>> word_separator("HelloMyWorld")\nHello my world\n')),(0,t.yg)("h2",{id:"convert_alpha_telephone"},"convert_alpha_telephone"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},"Traducteur de num\xe9ro de t\xe9l\xe9phone alphab\xe9tique\nDe nombreuses entreprises utilisent des num\xe9ros de t\xe9l\xe9phone \ntels que 555-GET-FOOD afin que leurs clients se souviennent plus \nfacilement du num\xe9ro. Sur un t\xe9l\xe9phone standard, les lettres \nalphab\xe9tiques sont mapp\xe9es aux nombres de la mani\xe8re suivante:\nA, B et C = 2\nD, E et F = 3\nG, H et I = 4\nJ, K et L = 5\nM, N et O = 6 P, Q, R et S = 7 T, U et V = 8\nW, X, Y et Z = 9\n\xc9crivez une fonction qui re\xe7oit un num\xe9ro de t\xe9l\xe9phone \xe0 10 \ncaract\xe8res au format XXX-XXX-XXXX. L'application doit retourner \nle num\xe9ro de t\xe9l\xe9phone avec tous les caract\xe8res alphab\xe9tiques \napparaissant dans l'original traduit en leur \xe9quivalent \nnum\xe9rique. Par exemple, si l'utilisateur entre 555-GET-FOOD, \nl'application doit retourner 555-438-3663.\n")),(0,t.yg)("h2",{id:"1-manipulations-de-base-avec-numpy"},"1. Manipulations de base avec NumPy"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Cr\xe9ez un tableau NumPy (numpy.ndarray) de dimensions (5, 5) contenant des entiers al\xe9atoires compris entre 1 et 100.  "),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Astuce : Utilisez la fonction ",(0,t.yg)("inlineCode",{parentName:"li"},"np.random.randint"),"."))),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Affichez :"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Le minimum et le maximum de ce tableau.  "),(0,t.yg)("li",{parentName:"ul"},"La moyenne des valeurs.  "),(0,t.yg)("li",{parentName:"ul"},"L\u2019\xe9cart-type (standard deviation)."))),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Modifiez une partie de votre tableau pour lui assigner de nouvelles valeurs (par exemple, remplacez la derni\xe8re ligne par des z\xe9ros).")),(0,t.yg)("li",{parentName:"ol"},(0,t.yg)("p",{parentName:"li"},"Affichez enfin la forme (shape) et le type de donn\xe9es (dtype) de votre tableau pour v\xe9rifier vos manipulations."))),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'import numpy as np\n\n# 1. Cr\xe9er un tableau 5x5 d\'entiers al\xe9atoires\narr = np.random.randint(1, 101, (5, 5))\n\n# 2. Statistiques simples\nprint("Tableau:\\n", arr)\nprint("Min:", arr.min())\nprint("Max:", arr.max())\nprint("Moyenne:", arr.mean())\nprint("\xc9cart-type:", arr.std())\n\n# 3. Modification d\'une partie du tableau\narr[-1, :] = 0  # Remplace la derni\xe8re ligne par des z\xe9ros\nprint("Tableau modifi\xe9:\\n", arr)\n\n# 4. Informations sur le tableau\nprint("Shape:", arr.shape)\nprint("Dtype:", arr.dtype)\n')),(0,t.yg)("h1",{id:"numpy-et-pandas"},"Numpy et pandas"),(0,t.yg)("h2",{id:"2-cr\xe9ation-dun-dataframe-simple-et-manipulations"},"2. Cr\xe9ation d\u2019un DataFrame simple et manipulations"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Cr\xe9ez un DataFrame ",(0,t.yg)("inlineCode",{parentName:"li"},"df")," \xe0 partir d\u2019un ",(0,t.yg)("strong",{parentName:"li"},"dictionnaire")," Python. Par exemple :",(0,t.yg)("pre",{parentName:"li"},(0,t.yg)("code",{parentName:"pre",className:"language-python"},'data = {\n    "Prenom": ["Alice", "Bob", "Charlie", "David", "Eva"],\n    "Age": [25, 30, 35, 25, 40],\n    "Ville": ["Paris", "Lyon", "Marseille", "Bordeaux", "Nice"]\n}\n'))),(0,t.yg)("li",{parentName:"ol"},"Affichez le DataFrame et v\xe9rifiez ses informations g\xe9n\xe9rales (",(0,t.yg)("inlineCode",{parentName:"li"},"df.info()")," et ",(0,t.yg)("inlineCode",{parentName:"li"},"df.describe()"),")."),(0,t.yg)("li",{parentName:"ol"},"Ajoutez une nouvelle colonne ",(0,t.yg)("inlineCode",{parentName:"li"},"Note")," (par exemple, des notes entre 10 et 20) au DataFrame."),(0,t.yg)("li",{parentName:"ol"},"Triez le DataFrame selon la colonne ",(0,t.yg)("inlineCode",{parentName:"li"},"Age"),", de la plus grande \xe0 la plus petite valeur."),(0,t.yg)("li",{parentName:"ol"},"Supprimez (ou remplacez par ",(0,t.yg)("inlineCode",{parentName:"li"},"NaN"),") toutes les valeurs de ",(0,t.yg)("inlineCode",{parentName:"li"},"Note")," inf\xe9rieures \xe0 12.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'import pandas as pd\n\ndata = {\n    "Prenom": ["Alice", "Bob", "Charlie", "David", "Eva"],\n    "Age": [25, 30, 35, 25, 40],\n    "Ville": ["Paris", "Lyon", "Marseille", "Bordeaux", "Nice"]\n}\n\ndf = pd.DataFrame(data)\n\n# Informations\nprint(df.info())\nprint(df.describe())\n\n# Ajouter une colonne "Note"\nimport numpy as np\ndf["Note"] = np.random.randint(10, 21, len(df))\n\n# Trier selon l\'\xe2ge (d\xe9croissant)\ndf_sorted = df.sort_values(by="Age", ascending=False)\n\n# Remplacer les Note < 12 par NaN\ndf_sorted.loc[df_sorted["Note"] < 12, "Note"] = np.nan\n\nprint(df_sorted)\n')),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"3-groupby-et-statistiques-agr\xe9g\xe9es"},"3. GroupBy et statistiques agr\xe9g\xe9es"),(0,t.yg)("p",null,"\xc0 partir du DataFrame pr\xe9c\xe9dent (ou en cr\xe9ant un nouveau DataFrame), imaginez que vous avez une colonne suppl\xe9mentaire nomm\xe9e ",(0,t.yg)("strong",{parentName:"p"},"D\xe9partement")," repr\xe9sentant le d\xe9partement d\u2019un employ\xe9 ou d\u2019un \xe9tudiant, par exemple :"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'"Departement": ["Informatique", "Marketing", "Informatique", "Marketing", "RH"]\n')),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Ajoutez cette colonne \xe0 votre DataFrame."),(0,t.yg)("li",{parentName:"ol"},"Utilisez la m\xe9thode ",(0,t.yg)("inlineCode",{parentName:"li"},"groupby")," pour grouper par le d\xe9partement."),(0,t.yg)("li",{parentName:"ol"},"Calculez la moyenne d\u2019\xe2ge et la moyenne de la note dans chaque d\xe9partement."),(0,t.yg)("li",{parentName:"ol"},"Affichez \xe9galement la taille de chaque groupe (combien d\u2019employ\xe9s ou d\u2019\xe9tudiants sont dans chaque d\xe9partement).")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'df["Departement"] = ["Informatique", "Marketing", "Informatique", "Marketing", "RH"]\n\ngrouped = df.groupby("Departement")\n\nprint(grouped["Age"].mean())\nprint(grouped["Note"].mean())\nprint(grouped.size())  # Nombre d\'entr\xe9es par d\xe9partement\n')),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"4-fusion-de-dataframes-merge--concat"},"4. Fusion de DataFrames (merge / concat)"),(0,t.yg)("ol",null,(0,t.yg)("li",{parentName:"ol"},"Cr\xe9ez deux DataFrames simples :  ",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"df1")," : contient des informations sur des produits (id, nom, prix).  "),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("strong",{parentName:"li"},"df2")," : contient des informations sur les m\xeames produits (id) et un score de popularit\xe9.  "))),(0,t.yg)("li",{parentName:"ol"},"Fusionnez ces deux DataFrames sur la cl\xe9 ",(0,t.yg)("inlineCode",{parentName:"li"},"id")," pour obtenir un DataFrame unique qui contient \xe0 la fois le prix et la popularit\xe9 de chaque produit."),(0,t.yg)("li",{parentName:"ol"},"Si vous le souhaitez, illustrez une fusion de type ",(0,t.yg)("inlineCode",{parentName:"li"},"left"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"right")," ou ",(0,t.yg)("inlineCode",{parentName:"li"},"outer")," pour voir les diff\xe9rences.")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-python"},'df1 = pd.DataFrame({\n    "id": [1, 2, 3],\n    "nom": ["Stylo", "Cahier", "Trousse"],\n    "prix": [1.5, 3.0, 2.0]\n})\n\ndf2 = pd.DataFrame({\n    "id": [1, 3, 4],\n    "popularite": [100, 200, 50]\n})\n\nmerged = pd.merge(df1, df2, on="id", how="inner")\nprint("Fusion inner:\\n", merged)\n\nmerged_left = pd.merge(df1, df2, on="id", how="left")\nprint("Fusion left:\\n", merged_left)\n')))}d.isMDXComponent=!0},5680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>g});var r=a(6540);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var p=r.createContext({}),s=function(e){var n=r.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(a),c=t,g=d["".concat(p,".").concat(c)]||d[c]||m[c]||i;return a?r.createElement(g,l(l({ref:n},u),{},{components:a})):r.createElement(g,l({ref:n},u))}));function g(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[d]="string"==typeof e?e:t,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"}}]);