"use strict";(self.webpackChunkhugo_code_star_site=self.webpackChunkhugo_code_star_site||[]).push([[4185],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var a=t(6540);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),u=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(o.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=s,g=p["".concat(o,".").concat(m)]||p[m]||c[m]||r;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[p]="string"==typeof e?e:s,i[1]=l;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7944:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=t(8168),s=(t(6540),t(5680));const r={title:"POO",sidebar_label:"10 - NoSQL, AI/ML, POO",sidebar_position:10},i=void 0,l={unversionedId:"inf5111/Cours/cours10",id:"inf5111/Cours/cours10",isDocsHomePage:!1,title:"POO",description:"Famille-colonne et Cassandra",source:"@site/docs/inf5111/Cours/cours10.md",sourceDirName:"inf5111/Cours",slug:"/inf5111/Cours/cours10",permalink:"/site/docs/inf5111/Cours/cours10",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf5111/Cours/cours10.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"POO",sidebar_label:"10 - NoSQL, AI/ML, POO",sidebar_position:10},sidebar:"INF5111Sidebar",previous:{title:"9 - Mongo & Redis",permalink:"/site/docs/inf5111/Cours/cours9"},next:{title:"Intro",permalink:"/site/docs/inf5111"}},o=[{value:"Famille-colonne et Cassandra",id:"famille-colonne-et-cassandra",children:[]},{value:"Base de donn\xe9e \xe0 type de graphe",id:"base-de-donn\xe9e-\xe0-type-de-graphe",children:[]},{value:"Programmation orient\xe9e-objet",id:"programmation-orient\xe9e-objet",children:[]},{value:"Les objets",id:"les-objets",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Exemple d&#39;une classe",id:"exemple-dune-classe",children:[]},{value:"M\xe9thodes d&#39;une classe",id:"m\xe9thodes-dune-classe",children:[]},{value:"Cr\xe9ation d&#39;objets \xe0 partir d&#39;une classe",id:"cr\xe9ation-dobjets-\xe0-partir-dune-classe",children:[]},{value:"Attributs priv\xe9s",id:"attributs-priv\xe9s",children:[]},{value:"Multiple instance",id:"multiple-instance",children:[]},{value:"Accesseurs et mutateurs",id:"accesseurs-et-mutateurs",children:[]}],u={toc:o},d="wrapper";function p(e){let{components:n,...t}=e;return(0,s.yg)(d,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"famille-colonne-et-cassandra"},"Famille-colonne et Cassandra"),(0,s.yg)("p",null,"Les magasins de famille de colonnes, tels que Cassandra vous permettent de stocker des donn\xe9es avec des cl\xe9s mapp\xe9es sur des valeurs et les valeurs regroup\xe9es dans plusieurs familles de colonnes, chaque famille de colonnes \xe9tant un 'map' . de donn\xe9es."),(0,s.yg)("table",null,(0,s.yg)("thead",{parentName:"table"},(0,s.yg)("tr",{parentName:"thead"},(0,s.yg)("th",{parentName:"tr",align:null},"RDBMS"),(0,s.yg)("th",{parentName:"tr",align:null},"Cassandra"))),(0,s.yg)("tbody",{parentName:"table"},(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},"database instance"),(0,s.yg)("td",{parentName:"tr",align:null},"cluster")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},"database"),(0,s.yg)("td",{parentName:"tr",align:null},"keyspace")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},"table"),(0,s.yg)("td",{parentName:"tr",align:null},"column family")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},"row"),(0,s.yg)("td",{parentName:"tr",align:null},"row")),(0,s.yg)("tr",{parentName:"tbody"},(0,s.yg)("td",{parentName:"tr",align:null},"column (pareil pour chaque ligne)"),(0,s.yg)("td",{parentName:"tr",align:null},"column (peuvent diff\xe9r\xe9 entre chaque ligne)")))),(0,s.yg)("p",null,"Commen\xe7ons par regarder comment les donn\xe9es sont structur\xe9es dans Cassandra. L'unit\xe9 de stockage de base de Cassandra est une colonne. Une colonne Cassandra se compose d'une paire nom-valeur o\xf9 le nom se comporte \xe9galement comme la cl\xe9. Chacune de ces paires cl\xe9-valeur est une colonne unique et est toujours stock\xe9e avec une valeur d'horodatage. L'horodatage est utilis\xe9 pour faire expirer les donn\xe9es, r\xe9soudre les conflits d'\xe9criture, traiter les donn\xe9es obsol\xe8tes et faire d'autres choses. Une fois que les donn\xe9es de la colonne ne sont plus utilis\xe9es, l'espace peut \xeatre r\xe9cup\xe9r\xe9 plus tard lors d'une phase de compactage."),(0,s.yg)("h2",{id:"base-de-donn\xe9e-\xe0-type-de-graphe"},"Base de donn\xe9e \xe0 type de graphe"),(0,s.yg)("p",null,"Les bases de donn\xe9es de graphes permettent de stocker des entit\xe9s et des relations entre ces entit\xe9s. Les entit\xe9s sont \xe9galement appel\xe9es n\u0153uds, qui ont des propri\xe9t\xe9s. Consid\xe9rez un n\u0153ud comme une instance d'un objet dans l'application. Les relations sont appel\xe9es ar\xeates qui peuvent avoir des propri\xe9t\xe9s. Les bords ont une signification directionnelle\xa0; les n\u0153uds sont organis\xe9s par des relations qui vous permettent de trouver des mod\xe8les int\xe9ressants entre les n\u0153uds. L'organisation du graphique permet aux donn\xe9es d'\xeatre stock\xe9es une fois, puis interpr\xe9t\xe9es de diff\xe9rentes mani\xe8res en fonction des relations."),(0,s.yg)("h2",{id:"programmation-orient\xe9e-objet"},"Programmation orient\xe9e-objet"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"La programmation orient\xe9e-objet (POO) est un paradigme de programmation qui permet de conceptualiser des probl\xe8mes complexes d'une mani\xe8re plus humaine."),(0,s.yg)("li",{parentName:"ul"},"On consid\xe8re les \xe9l\xe9ments du probl\xe8me comme \xe9tant des entit\xe9s distinctes (des objets) qui pourront \xe9voluer face \xe0 la probl\xe9matique."),(0,s.yg)("li",{parentName:"ul"},"Cela vient en contraste \xe0 la programmation proc\xe9durale qui se base sur le flux s\xe9quentiel des instructions et de l'utilisation de fonctions avec des entr\xe9es et sorties bien d\xe9finies.")),(0,s.yg)("h2",{id:"les-objets"},"Les objets"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"Un objet repr\xe9sente deux informations :",(0,s.yg)("ul",{parentName:"li"},(0,s.yg)("li",{parentName:"ul"},"Les donn\xe9es (attributs, variables)"),(0,s.yg)("li",{parentName:"ul"},"Les comportements (m\xe9thodes, fonctions)")))),(0,s.yg)("p",null,"Par exemple, une alarme aura les informations suivantes:"),(0,s.yg)("p",null,"Attributs:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"current_second (0\u201359)"),(0,s.yg)("li",{parentName:"ul"},"current_minute (0\u201359)"),(0,s.yg)("li",{parentName:"ul"},"current_hour (1\u201312)"),(0,s.yg)("li",{parentName:"ul"},"alarm_time (heure et minute valide)"),(0,s.yg)("li",{parentName:"ul"},"alarm_is_set (True, False)")),(0,s.yg)("p",null,"M\xe9thodes:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"set_time"),(0,s.yg)("li",{parentName:"ul"},"set_alarm_time "),(0,s.yg)("li",{parentName:"ul"},"set_alarm_on"),(0,s.yg)("li",{parentName:"ul"},"set_alarm_off")),(0,s.yg)("h2",{id:"classes"},"Classes"),(0,s.yg)("p",null,"Une classe est un gabarit pour la construction d'objet. On peut aussi le voir comme une recette."),(0,s.yg)("p",null,"La classe est le code qui pourra d\xe9crire les diff\xe9rents objets qui sont cr\xe9\xe9s \xe0 partir de la classe. Les objets cr\xe9\xe9s \xe0 partir d'une classe sont nomm\xe9s les instances de la classe."),(0,s.yg)("h2",{id:"exemple-dune-classe"},"Exemple d'une classe"),(0,s.yg)("p",null,"La classe est indiqu\xe9e par le bloc de code ",(0,s.yg)("inlineCode",{parentName:"p"},"class")," qui va contenir diff\xe9rentes m\xe9thodes de la classe."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-python"},"import random\n\n# Simulation d'une pi\xe8ce de monaie\n\nclass Coin:\n    \n    # __init__ initialise a 'Face'.\n    \n    def __init__(self):\n        self.sideup = 'Face'\n    \n    def toss(self):\n        # G\xe9n\xe9ration al\xe9atoire de nombre pour\n        # \"lancer\" la pi\xe8ce\n        if random.randint(0, 1) == 0:\n            self.sideup = 'Face'\n        else:\n            self.sideup = 'Pile'\n\n    # Retourne l'\xe9tat courant de la pi\xe8ce\n    \n    def get_sideup(self):\n        return self.sideup\n\n\n")),(0,s.yg)("h2",{id:"m\xe9thodes-dune-classe"},"M\xe9thodes d'une classe"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Les m\xe9thodes sont des d\xe9finitions de fonctions \xe0 l'int\xe9rieur d'une classe.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Chaque fonction doit recevoir le param\xe8tre obligatoire ",(0,s.yg)("inlineCode",{parentName:"p"},"self"),". Le ",(0,s.yg)("inlineCode",{parentName:"p"},"self")," fait r\xe9f\xe9rence \xe0 l'instance de l'objet \xe0 manipuler.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"La m\xe9thode ",(0,s.yg)("inlineCode",{parentName:"p"},"__init__")," est sp\xe9ciale, car c'est la m\xe9thode qui sera appel\xe9e \xe0 l'initialisation d'une nouvelle instance (un objet) de la classe. Elle permet donc d'initialiser les diff\xe9rentes donn\xe9es de l'instance.")),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("p",{parentName:"li"},"Les attributs sont attach\xe9s au ",(0,s.yg)("inlineCode",{parentName:"p"},"self")," et peuvent \xeatre ensuite modifi\xe9 en utilisant l'op\xe9rateur ",(0,s.yg)("inlineCode",{parentName:"p"},"."),"."))),(0,s.yg)("h2",{id:"cr\xe9ation-dobjets-\xe0-partir-dune-classe"},"Cr\xe9ation d'objets \xe0 partir d'une classe"),(0,s.yg)("p",null,"Suivant l'exemple de la classe ",(0,s.yg)("inlineCode",{parentName:"p"},"Coin"),":"),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-python"},"def main():\n    # Cr\xe9ation de l'objet avec la m\xe9thode init\n    my_coin = Coin()\n\n    # Affiche l'\xe9tat de la pi\xe8ce\n    print('This side is up:', my_coin.get_sideup())\n\n    # Lance la pi\xe8ce\n    print('I am tossing the coin...')\n    my_coin.toss()\n\n    # Affiche l'\xe9tat de la pi\xe8ce\n    print('This side is up:', my_coin.get_sideup())\n    \nmain()\n\n")),(0,s.yg)("h2",{id:"attributs-priv\xe9s"},"Attributs priv\xe9s"),(0,s.yg)("p",null,"Il est possible de cacher les attributs pour que ceux-ci ne soient pas accessibles \xe0 l'ext\xe9rieur de la classe."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-python"},"import random\n\nclass Coin:\n\n    def __init__(self):\n        self.__sideup = 'Heads'\n\n    def toss(self):\n        if random.randint(0, 1) == 0:\n            self.__sideup = 'Heads'\n        else:\n            self.__sideup = 'Tails'\n\n    def get_sideup(self):\n        return self.__sideup\n")),(0,s.yg)("p",null,"Les attributs avec deux tirets bas seront cach\xe9s \xe0 un acc\xe8s public."),(0,s.yg)("h2",{id:"multiple-instance"},"Multiple instance"),(0,s.yg)("p",null,"Chaque objet aura ses propres valeurs dans les attributs."),(0,s.yg)("pre",null,(0,s.yg)("code",{parentName:"pre",className:"language-python"},"\ndef main():\n    coin1 = Coin()\n    coin2 = Coin()\n    coin3 = Coin()\n\n    print('I have three coins with these sides up:')\n    print(coin1.get_sideup())\n    print(coin2.get_sideup())\n    print(coin3.get_sideup())\n    print()\n    \n    print('I am tossing all three coins...')\n    print()\n    coin1.toss()\n    coin2.toss()\n    coin3.toss()\n\n    print('Now here are the sides that are up:')\n    print(coin1.get_sideup())\n    print(coin2.get_sideup())\n    print(coin3.get_sideup())\n    print()\n\nmain()\n\n")),(0,s.yg)("h2",{id:"accesseurs-et-mutateurs"},"Accesseurs et mutateurs"),(0,s.yg)("p",null,"Pour avoir un meilleur contr\xf4le sur les donn\xe9es des objets, on utilise habituellement des attributs priv\xe9s et on expose des m\xe9thodes d'acc\xe8s (get) et de mutation (set) pour travailler sur les attributs."),(0,s.yg)("p",null,"Par exemple, l'attribut ",(0,s.yg)("inlineCode",{parentName:"p"},"__sideup")," de la classe ",(0,s.yg)("inlineCode",{parentName:"p"},"Coin")," pourrait avoir la m\xe9thode ",(0,s.yg)("inlineCode",{parentName:"p"},"get_sideup")," qui retourne la valeur de l'attribut et la m\xe9thode ",(0,s.yg)("inlineCode",{parentName:"p"},"set_sideup")," qui re\xe7oit et assigne une nouvelle valeur \xe0 l'attribut. Les m\xe9thodes d'acc\xe8s et de mutations permettent d'ajouter de la validation \xe0 la modification d'attributs."))}p.isMDXComponent=!0}}]);