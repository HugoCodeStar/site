"use strict";(self.webpackChunkhugo_code_star_site=self.webpackChunkhugo_code_star_site||[]).push([[7157],{5680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>f});var t=r(6540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(r),d=i,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return r?t.createElement(f,l(l({ref:n},u),{},{components:r})):t.createElement(f,l({ref:n},u))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=r[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8110:(e,n,r)=>{r.r(n),r.d(n,{contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=r(8168),i=(r(6540),r(5680));const a={title:"Programmes \xe0 faire de l'atelier 5",sidebar_label:"5 - Fichiers et exceptions"},l=void 0,o={unversionedId:"inf1256/atelier/atelier5",id:"inf1256/atelier/atelier5",isDocsHomePage:!1,title:"Programmes \xe0 faire de l'atelier 5",description:"printfileline_numbers",source:"@site/docs/inf1256/atelier/atelier5.md",sourceDirName:"inf1256/atelier",slug:"/inf1256/atelier/atelier5",permalink:"/site/docs/inf1256/atelier/atelier5",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/inf1256/atelier/atelier5.md",tags:[],version:"current",frontMatter:{title:"Programmes \xe0 faire de l'atelier 5",sidebar_label:"5 - Fichiers et exceptions"},sidebar:"INF1256Sidebar",previous:{title:"4 - Listes et tuples",permalink:"/site/docs/inf1256/atelier/atelier4"},next:{title:"6 - Chaines de caract\xe8res",permalink:"/site/docs/inf1256/atelier/atelier6"}},c=[{value:"print_file_line_numbers",id:"print_file_line_numbers",children:[]},{value:"write_fibonacci",id:"write_fibonacci",children:[]},{value:"find_max_score_name",id:"find_max_score_name",children:[]}],s={toc:c},u="wrapper";function p(e){let{components:n,...r}=e;return(0,i.yg)(u,(0,t.A)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"print_file_line_numbers"},"print_file_line_numbers"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Affiche toutes les lignes d'un fichier avec un num\xe9ro de ligne ajout\xe9 \xe0 chaque lignes.\nArgs:\n    filename: Le nom du fichier\n")),(0,i.yg)("p",null,"Exemple :"),(0,i.yg)("p",null,"Avec le fichier ",(0,i.yg)("inlineCode",{parentName:"p"},"test1.txt")," suivant :"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Salut\nBonjour\nAllo\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},">>> print_file_line_numbers('test1.txt')\n1 - Salut\n2 - Bonjour\n3 - Allo\n")),(0,i.yg)("h2",{id:"write_fibonacci"},"write_fibonacci"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"\xc9crit dans une fichier un certain nombre de la suite de Fibonacci.\nChaque nombre est sur sa propre ligne.\nArgs:\n    filename: Nom du fichier \xe0 \xe9crire\n    n: Le nombre d'\xe9l\xe9ments de la s\xe9quence \xe0 \xe9crire\n")),(0,i.yg)("p",null,"Exemple :"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},">>> write_fibonacci('test2.txt', 10)\n")),(0,i.yg)("p",null,"\xc9crite le ficiher ",(0,i.yg)("inlineCode",{parentName:"p"},"test2.txt")," suivant :"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"0\n1\n1\n2\n3\n5\n8\n13\n21\n34\n")),(0,i.yg)("h2",{id:"find_max_score_name"},"find_max_score_name"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Trouve et retourne le nom de la personne avec le plus haut score \xe0 partir\nd'un fichier qui contient les noms et scores de plusieurs personnes.\nLe fichier contient sur une s\xe9rie de score avec le nom et le score sur des lignes\nindividuelles.\n\nArgs:\n    filename: Le nom du fichier avec les scores.\n\nReturns:\n    Le nom de la personne avec le plus haut score.\n")),(0,i.yg)("p",null,"Exemple : "),(0,i.yg)("p",null,"Avec le fichier ",(0,i.yg)("inlineCode",{parentName:"p"},"test3.txt.")," suivant : "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Max\n45\nBob\n78\nJulie\n89\nCeline\n80\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},">>> print(find_max_score_name('test3.txt'))\nJulie\n")))}p.isMDXComponent=!0}}]);