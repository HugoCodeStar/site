"use strict";(self.webpackChunkhugo_code_star_site=self.webpackChunkhugo_code_star_site||[]).push([[2836],{4617:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var s=n(8168),a=n(8587),r=(n(6540),n(5680));const i=["components"],l={title:"\xc9l\xe9ment statique",sidebar_label:"4 - Static",sidebar_position:4},o=void 0,u={unversionedId:"b07/cours/cours4",id:"b07/cours/cours4",isDocsHomePage:!1,title:"\xc9l\xe9ment statique",description:"Static",source:"@site/docs/b07/cours/cours4.md",sourceDirName:"b07/cours",slug:"/b07/cours/cours4",permalink:"/site/docs/b07/cours/cours4",editUrl:"https://github.com/HugoCodeStar/site/edit/master/docs/b07/cours/cours4.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\xc9l\xe9ment statique",sidebar_label:"4 - Static",sidebar_position:4},sidebar:"B07Sidebar",previous:{title:"3 - Propri\xe9t\xe9s",permalink:"/site/docs/b07/cours/cours3"},next:{title:"5 - H\xe9ritage & Polymorphisme",permalink:"/site/docs/b07/cours/cours5"}},c=[{value:"Static",id:"static",children:[{value:"Champs statique",id:"champs-statique",children:[]},{value:"Propri\xe9t\xe9s statiques",id:"propri\xe9t\xe9s-statiques",children:[]},{value:"M\xe9thodes statiques",id:"m\xe9thodes-statiques",children:[]},{value:"Constructeur statique",id:"constructeur-statique",children:[]},{value:"Classe statique",id:"classe-statique",children:[]}]},{value:"R\xe9f\xe9rence null",id:"r\xe9f\xe9rence-null",children:[{value:"Variable nullable",id:"variable-nullable",children:[]}]}],p={toc:c},d="wrapper";function m(e){let{components:t}=e,n=(0,a.A)(e,i);return(0,r.yg)(d,(0,s.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"static"},"Static"),(0,r.yg)("p",null,"Il est possible d'avoir des \xe9l\xe9ments statique \xe0 une classe qui existerons \xe0 l'ext\xe9rieur des instances de la classe. Nous pourrons donc avoir des variables de classes et de m\xe9thodes statiques. Ces membres seront disponible dans les programmes qui impl\xe9mente la classe."),(0,r.yg)("h3",{id:"champs-statique"},"Champs statique"),(0,r.yg)("p",null,"Le mot cl\xe9 statique peut \xeatre ajouter aux variables d'instance pour la variable appartiennent \xe0 la classe statique."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"public class Score\n{\n    private static readonly int PointThreshold = 1000;\n    private static readonly int LevelThreshold = 4;\n    // ... \n}\n")),(0,r.yg)("p",null,"Les champs statiques seront disponible dans toutes les m\xe9thodes de la classe ou de l'ext\xe9rieur si l'\xe9l\xe9ment est ",(0,r.yg)("inlineCode",{parentName:"p"},"public"),". Pour y acced\xe9 de l'ext\xe9rieur, nous utiliserons le nom de la classe comme \xe9l\xe9ment initiale (ex: ",(0,r.yg)("inlineCode",{parentName:"p"},"Score.LevelThreshold"),")."),(0,r.yg)("h3",{id:"propri\xe9t\xe9s-statiques"},"Propri\xe9t\xe9s statiques"),(0,r.yg)("p",null,"Les propri\xe9t\xe9s peuvent aussi \xeatre statique avec le mot cl\xe9 ",(0,r.yg)("inlineCode",{parentName:"p"},"static"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"public class Score\n{\n    public static int PointThreshold { get; } = 1000;\n    public static int LevelThreshold { get; } = 4;\n    // ...\n}\n")),(0,r.yg)("h3",{id:"m\xe9thodes-statiques"},"M\xe9thodes statiques"),(0,r.yg)("p",null,"Les m\xe9thodes statiques pourront \xeatre invoqu\xe9s sans instances. Les m\xe9thodes statiques sont habituellement des m\xe9thodes d'aides qui seront utilis\xe9s contextuellement avec la classe sans avoir besoin d'instance de la classe."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"public static int CountForPlayer(string playerName, Score[] scores)\n{\n    int count = 0;\n    foreach (Score score in scores)\n        if (score.Name == playerName) count++;\n    return count;\n}\n")),(0,r.yg)("p",null,"Les m\xe9thodes statiques sont aussi souvent utiliser pour des m\xe9thodes de cr\xe9ation (Factory methods) qui permet de cr\xe9\xe9 des objets avec des nom plus appropri\xe9s que le constructeur ou pour contourner les conflit dans des signatures identique du constructeurs."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"// M\xe9thode statique dans la classe Rectangle\npublic static Rectangle CreateSquare(float size) => new Rectangle(size, size);\n\n// Utilisation du factory\nRectangle rectangle = Rectangle.CreateSquare(2);\n")),(0,r.yg)("h3",{id:"constructeur-statique"},"Constructeur statique"),(0,r.yg)("p",null,"Si les champs statiques ont besoin d'initialisation, il est aussi possible d'avoir un constructeur statique. Ce dernier ne peut pas avoir de param\xe8tre et sera invoqu\xe9 automatique au d\xe9but du programme. Il ne peut pas \xeatre appell\xe9 par la suite."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"public class Score\n{\n    public static readonly int PointThreshold;\n    public static readonly int LevelThreshold;\n    static Score()\n    {\n        PointThreshold = 1000;\n        LevelThreshold = 4;\n    }\n    //...\n}\n")),(0,r.yg)("h3",{id:"classe-statique"},"Classe statique"),(0,r.yg)("p",null,"Certaines classes n'ont pas besoin d'avoir d'instance. Celle-ci contiennent souvent juste une liste de m\xe9hodte statique contextuelle au probl\xe8me. Plusieurs classe fournit par le langage (comme ",(0,r.yg)("inlineCode",{parentName:"p"},"Console"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"Convert")," ou ",(0,r.yg)("inlineCode",{parentName:"p"},"Math"),") sont des classes statiques. Les classes statiques sont utilis\xe9 \xe0 partir de leurs noms et ne peuvent pas \xeatre instanc\xe9 avec un ",(0,r.yg)("inlineCode",{parentName:"p"},"new"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"public class Utilities\n{\n    public static int Helper1() => 4;\n    public static double HelperProperty => 4.0;\n    public static int AddNumbers(int a, int b) => a + b;\n}\n")),(0,r.yg)("h2",{id:"r\xe9f\xe9rence-null"},"R\xe9f\xe9rence null"),(0,r.yg)("p",null,"Les objets instanci\xe9s ne sont pas directement sauvegard\xe9s \xe0 l'int\xe9rieur d'une variable comme on pourrait le penser \xe0 premi\xe8re vue. La variable contient une ",(0,r.yg)("strong",{parentName:"p"},"r\xe9f\xe9rence")," \xe0 l'objet en m\xe9moire."),(0,r.yg)("p",null,"Certaines implications arrivent avec cette m\xe9thode :"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Il est possible d'avoir plusieurs variables qui utilisent la m\xeame r\xe9f\xe9rence"),(0,r.yg)("li",{parentName:"ul"},"La modification d'un objet affecte toutes les variables avec cette r\xe9f\xe9rence"),(0,r.yg)("li",{parentName:"ul"},"Un objet existe en dehors de la variable cr\xe9\xe9e dans nos programmes."),(0,r.yg)("li",{parentName:"ul"},"Il est possible d'avoir une variable avec aucune r\xe9f\xe9rence. On parle ici d'une r\xe9f\xe9rence ",(0,r.yg)("inlineCode",{parentName:"li"},"null"),".")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},"// Une variable sans r\xe9f\xe9rence\nScore score = null;\n")),(0,r.yg)("h3",{id:"variable-nullable"},"Variable nullable"),(0,r.yg)("p",null,"La pr\xe9sence d'\xe9l\xe9ment null peut apport\xe9 des cons\xe9quences difficiles \xe0 rectifier. Par d\xe9fault, un warning est \xe9mis si une variable \xe0 eu la possibilit\xe9 d'\xeatre ",(0,r.yg)("inlineCode",{parentName:"p"},"null"),". Dans les derni\xe8res versions de c# (9+), il est possible d'identifier une variable comme \xe9tant possiblement null sans warning. Il ne faut pas oublier de tester la nullit\xe9 quand on utilise cette variable par la suite."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c#"},'// Ctrl-z durant la saisie retourne un \xe9l\xe9ment vide\n// Le ? apr\xe8s le type indique la possiblit\xe9 d\'un r\xe9f\xe9rence null (controll\xe9)\nstring? name = Console.ReadLine();\n\n// Test de nullit\xe9\nif (name != null)\n{\n    Console.WriteLine("Pas null!.")\n}\n')))}m.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var s=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach(function(t){a(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function l(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=s.createContext({}),u=function(e){var t=s.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return s.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef(function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,g=p["".concat(o,".").concat(m)]||p[m]||d[m]||r;return n?s.createElement(g,i(i({ref:t},c),{},{components:n})):s.createElement(g,i({ref:t},c))});function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);